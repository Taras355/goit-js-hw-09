{"mappings":"gfAAA,IAAAA,EAAAC,EAAA,SAEeC,SAASC,cAAc,SAC/BC,iBAAiB,UAExB,SAAkBC,G,kBAeV,IAAMC,EAAYC,OAAOC,EAAKC,OAASC,EAAIH,OAAOI,EAAMF,QAkBhE,SAAuBG,EAAUD,GAC7B,IAAME,EAAgBC,KAAKC,SAAW,GACtC,OAAO,IAAIC,SAAQ,SAACC,EAAKC,GACrBC,YAAW,WACHN,EACAI,EAAI,uBAAwCG,OAAfR,EAAS,QAAYQ,OAANT,EAAM,OAEhDO,EAAE,sBAAqCE,OAAfR,EAAS,QAAYQ,OAANT,EAAM,M,GAEpDA,E,KA1BHU,CAAcX,EAAI,EAAGJ,GAChBgB,MAAK,SAACL,GACHjB,EAAAuB,OAAOC,QAAQP,GACfQ,QAAQC,IAAIT,E,IAEfU,OAAM,SAACC,GACJ5B,EAAAuB,OAAOM,QAAQD,GACfH,QAAQC,IAAIE,E,IAEfE,SAAQ,WACDvB,OAAOwB,EAAOtB,OAASC,GAAM,GAC7BL,EAAM2B,OAAOC,iBAAiBC,gBAAgB,W,KA1B9D7B,EAAM8B,iBACN,IAA8BC,EAAA/B,EAAM2B,OAAOK,SAArCN,EAAwBK,EAAxBL,OAAQvB,EAAgB4B,EAAhB5B,KAAMG,EAAUyB,EAAVzB,MACpB,GAAIJ,OAAOwB,EAAOtB,QAAU,EAExB,YADAT,EAAAuB,OAAOM,QAAQ,oCAGnBxB,EAAM2B,OAAOC,iBAAiBK,aAAa,WAAY,IACnD/B,OAAOC,EAAKC,OAAS,IACrBD,EAAKC,QAA8B,EAArBF,OAAOC,EAAKC,QAAa8B,YAEvChC,OAAOI,EAAMF,OAAS,IACtBE,EAAMF,QAA+B,EAAtBF,OAAOI,EAAMF,QAAa8B,YAE7C,IAAK,IAAIC,EAAI,EAAGA,EAAIjC,OAAOwB,EAAOtB,OAAQ+B,GAAK,EAACC,EAAAD,E","sources":["src/js/03-promises.js"],"sourcesContent":["import { Notify } from \"notiflix/build/notiflix-notify-aio\";\n\nconst formEl = document.querySelector(\".form\");\nformEl.addEventListener(\"submit\", onSubmit);\n\nfunction onSubmit(event) {\n    event.preventDefault();\n    let { amount, step, delay } = event.target.elements;\n    if (Number(amount.value) <= 0) {\n        Notify.failure(\"Amount must be a positive number\");\n        return;\n    }\n    event.target.lastElementChild.setAttribute(\"disabled\", \"\");\n    if (Number(step.value) < 0) {\n        step.value = (Number(step.value) * -1).toString();\n    }\n    if (Number(delay.value) < 0) {\n        delay.value = (Number(delay.value) * -1).toString();\n    }\n    for (let i = 0; i < Number(amount.value); i += 1) {\n        const realDelay = Number(step.value) * i + Number(delay.value);\n        createPromise(i + 1, realDelay)\n            .then((res) => {\n                Notify.success(res);\n                console.log(res);\n            })\n            .catch((err) => {\n                Notify.failure(err);\n                console.log(err);\n            })\n            .finally(() => {\n                if (Number(amount.value) - i === 1) {\n                    event.target.lastElementChild.removeAttribute(\"disabled\");\n                }\n            });\n    }\n}\n\nfunction createPromise(position, delay) {\n    const shouldResolve = Math.random() > 0.3;\n    return new Promise((res, rej) => {\n        setTimeout(() => {\n            if (shouldResolve) {\n                res(`✅ Fulfilled promise ${position} in ${delay}ms`);\n            } else {\n                rej(`❌ Rejected promise ${position} in ${delay}ms`);\n            }\n        }, delay);\n    });\n}\n"],"names":["$h6c0i","parcelRequire","document","querySelector","addEventListener","event","realDelay","Number","step","value","i","delay","position","shouldResolve","Math","random","Promise","res","rej","setTimeout","concat","$ce04d3a99e08e73b$var$createPromise","then","Notify","success","console","log","catch","err","failure","finally","amount","target","lastElementChild","removeAttribute","preventDefault","_elements","elements","setAttribute","toString","i1","_loop"],"version":3,"file":"03-promises.cd28b974.js.map"}