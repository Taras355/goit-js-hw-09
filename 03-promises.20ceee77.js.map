{"mappings":"oeAAA,IAAAA,EAAAC,EAAA,SAsCA,SAASC,EAAcC,EAAUC,GAC7B,MAAMC,EAAgBC,KAAKC,SAAW,GACtC,OAAO,IAAIC,SAAQ,CAACC,EAAKC,KACrBC,YAAW,KACHN,EACAI,EAAI,uBAAqBN,QAAiBC,OAExCM,EAAE,sBAAoBP,QAAeC,MAAU,GAEtDA,EAAM,G,CA7CFQ,SAASC,cAAc,SAC/BC,iBAAiB,UAExB,SAAkBC,GACdA,EAAMC,iBACN,IAAIC,OAAEA,EAAMC,KAAEA,EAAId,MAAEA,GAAUW,EAAMI,OAAOC,SAC3C,GAAIC,OAAOJ,EAAOK,QAAU,EAExB,YADAtB,EAAAuB,OAAOC,QAAQ,oCAGnBT,EAAMI,OAAOM,iBAAiBC,aAAa,WAAY,IACnDL,OAAOH,EAAKI,OAAS,IACrBJ,EAAKI,QAA8B,EAArBD,OAAOH,EAAKI,QAAaK,YAEvCN,OAAOjB,EAAMkB,OAAS,IACtBlB,EAAMkB,QAA+B,EAAtBD,OAAOjB,EAAMkB,QAAaK,YAE7C,IAAK,IAAIC,EAAI,EAAGA,EAAIP,OAAOJ,EAAOK,OAAQM,GAAK,EAAG,CAC9C,MAAMC,EAAYR,OAAOH,EAAKI,OAASM,EAAIP,OAAOjB,EAAMkB,OACxDpB,EAAc0B,EAAI,EAAGC,GAChBC,MAAMrB,IACHT,EAAAuB,OAAOQ,QAAQtB,GACfuB,QAAQC,IAAIxB,EAAI,IAEnByB,OAAOC,IACJnC,EAAAuB,OAAOC,QAAQW,GACfH,QAAQC,IAAIE,EAAI,IAEnBC,SAAQ,KACDf,OAAOJ,EAAOK,OAASM,GAAM,GAC7Bb,EAAMI,OAAOM,iBAAiBY,gBAAgB,WAAW,G","sources":["src/js/03-promises.js"],"sourcesContent":["import { Notify } from \"notiflix/build/notiflix-notify-aio\";\n\nconst formEl = document.querySelector(\".form\");\nformEl.addEventListener(\"submit\", onSubmit);\n\nfunction onSubmit(event) {\n    event.preventDefault();\n    let { amount, step, delay } = event.target.elements;\n    if (Number(amount.value) <= 0) {\n        Notify.failure(\"Amount must be a positive number\");\n        return;\n    }\n    event.target.lastElementChild.setAttribute(\"disabled\", \"\");\n    if (Number(step.value) < 0) {\n        step.value = (Number(step.value) * -1).toString();\n    }\n    if (Number(delay.value) < 0) {\n        delay.value = (Number(delay.value) * -1).toString();\n    }\n    for (let i = 0; i < Number(amount.value); i += 1) {\n        const realDelay = Number(step.value) * i + Number(delay.value);\n        createPromise(i + 1, realDelay)\n            .then((res) => {\n                Notify.success(res);\n                console.log(res);\n            })\n            .catch((err) => {\n                Notify.failure(err);\n                console.log(err);\n            })\n            .finally(() => {\n                if (Number(amount.value) - i === 1) {\n                    event.target.lastElementChild.removeAttribute(\"disabled\");\n                }\n            });\n    }\n}\n\nfunction createPromise(position, delay) {\n    const shouldResolve = Math.random() > 0.3;\n    return new Promise((res, rej) => {\n        setTimeout(() => {\n            if (shouldResolve) {\n                res(`✅ Fulfilled promise ${position} in ${delay}ms`);\n            } else {\n                rej(`❌ Rejected promise ${position} in ${delay}ms`);\n            }\n        }, delay);\n    });\n}\n"],"names":["$iQIUW","parcelRequire","$47d4ff9957288465$var$createPromise","position","delay","shouldResolve","Math","random","Promise","res","rej","setTimeout","document","querySelector","addEventListener","event","preventDefault","amount","step","target","elements","Number","value","Notify","failure","lastElementChild","setAttribute","toString","i","realDelay","then","success","console","log","catch","err","finally","removeAttribute"],"version":3,"file":"03-promises.20ceee77.js.map"}